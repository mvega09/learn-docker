version: '3.9'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
      - admin_pg
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend
      

  api:
    build: ./api
    ports:
      - "${API_PORT}:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    depends_on:
       - db
       - redis
    volumes:
      - ./api:/app
    networks:
      - backend
      - frontend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:5000"
    environment:
      API_URL: ${API_URL}
      API_URL_BROWSER: ${API_URL_BROWSER}
    depends_on:
      - api
    volumes:
      - ./frontend:/app
    networks:
      - frontend
    command: python app.py

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - db
    networks:
      - admin_pg

  metabase:
    image: metabase/metabase:latest
    ports:
      - "${METABASE_PORT}:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: db
    depends_on:
      - db
    volumes:
      - metabase_data:/metabase-data
    networks:
      - admin_pg

volumes:
  postgres_data:
  metabase_data:

networks:
  frontend:
  backend:
  admin_pg: